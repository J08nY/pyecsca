name: Perf

on: [push, pull_request]

env:
  LLVM_CONFIG: /usr/bin/llvm-config-10
  PS_PACKAGES: libps4000 libps5000 libps6000
  GMP_PACKAGES: libgmp-dev libmpfr-dev libmpc-dev
  OTHER_PACKAGES: swig gcc libpcsclite-dev llvm-10 libllvm10 llvm-10-dev libpari-dev pari-gp pari-seadata

jobs:
  perf:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
        gmp: [0, 1]
    env:
      PYTHON: ${{ matrix.python-version }}
      USE_GMP: ${{ matrix.gmp }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.gmp }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ matrix.gmp }}-${{ matrix.python-version }}-
            pip-${{ runner.os }}-${{ matrix.gmp }}-
            pip-${{ runner.os }}-
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Add picoscope repository
        run: |
          curl "https://labs.picotech.com/debian/dists/picoscope/Release.gpg.key" | sudo apt-key add
          sudo echo "deb https://labs.picotech.com/debian/ picoscope main" | sudo tee /etc/apt/sources.list.d/picoscope.list
          sudo apt-get update
      - name: Install system dependencies
        run: |
          sudo apt-get install -y $PS_PACKAGES $OTHER_PACKAGES
          if [ $USE_GMP == 1 ]; then sudo apt-get install -y $GMP_PACKAGES; fi
      - name: Install numpy
        run: |
          pip install "numpy<1.25"
      - name: Install picoscope bindings
        run: |
          git clone https://github.com/colinoflynn/pico-python && cd pico-python && python setup.py install && cd ..
          git clone https://github.com/picotech/picosdk-python-wrappers && cd picosdk-python-wrappers && python setup.py install && cd ..
      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          if [ $USE_GMP == 1 ]; then pip install -e ".[picoscope_sdk, picoscope_alt, chipwhisperer, smartcard, pari, gmp, test, dev]"; fi
          if [ $USE_GMP == 0 ]; then pip install -e ".[picoscope_sdk, picoscope_alt, chipwhisperer, smartcard, pari, test, dev]"; fi
      - name: Perf
        run: |
          make perf
      - name: Archive perf results
        uses: actions/upload-artifact@v2
        with:
          name: perf-results
          path:
            .perf
